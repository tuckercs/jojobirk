import React from 'react'

const getIcon = (name, color) => {
  switch (name) {
    case 'Logo':
      return (
        <path
          d="M13.72 14.68C17 14.24 19.2 12.2 19.2 8.48C19.2 4 15.8 0.999998 10.4 0.999998H0.76V29H10.4C15.8 29 19.2 26 19.2 21.4C19.2 17.8 17 15.76 13.72 15.32V14.68ZM10 4.8C13.24 4.8 15.12 6.08 15.12 9C15.12 11.92 13.24 13.2 10 13.2H4.76V4.8H10ZM4.76 25.2V16.8H10C13.24 16.8 15.12 18.08 15.12 21C15.12 23.92 13.24 25.2 10 25.2H4.76ZM40.7647 29L32.6047 0.999998H26.2447L18.0847 29H22.4047L25.1247 19.2H33.7647L36.4447 29H40.7647ZM28.8847 5.48L29.1247 3.32H29.7247L29.9647 5.48L32.6847 15.4H26.1647L28.8847 5.48ZM49.2894 29.6C55.4494 29.6 59.1294 26.28 59.1294 21.24C59.1294 17.04 56.6094 14.36 51.8094 13.44L48.7294 12.84C45.2094 12.16 43.8894 10.72 43.8894 8.6C43.8894 6 45.8094 4.16 49.4494 4.16C53.4094 4.16 55.1694 6.16 55.1694 10.12H59.4494C59.4494 3.76 55.8894 0.399999 49.6094 0.399999C43.6094 0.399999 39.6494 3.84 39.6494 8.92C39.6494 12.96 42.1694 15.68 46.9694 16.56L50.0494 17.12C53.5694 17.76 54.8894 19.24 54.8894 21.4C54.8894 24.12 52.8494 25.84 49.4494 25.84C45.4494 25.84 43.6094 23.76 43.6094 19.76H39.3294C39.3294 26.32 42.8094 29.6 49.2894 29.6ZM78.1341 29V25.2H65.4141V16.88H77.7341V13.08H65.4141V4.8H78.1341V0.999998H61.4141V29H78.1341Z"
          fill={color}
        />
      )
    case 'Name':
      return (
        <path
          d="M22.4477 72.2C38.6477 72.2 43.4477 62.1 43.4477 52.7V0.999995H30.9477V51.3C30.9477 57.3 29.5477 62.1 22.5477 62.1C14.8477 62.1 13.4477 56.6 13.4477 49.4V44.6H0.947656V50.4C0.947656 64.4 8.34766 72.2 22.4477 72.2ZM74.6242 72.2C90.0242 72.2 100.024 61.7 100.024 46C100.024 30.9 90.3242 19.8 74.6242 19.8C58.7242 19.8 49.0242 30.8 49.0242 46C49.0242 62.3 58.6242 72.2 74.6242 72.2ZM74.6242 63.5C65.2242 63.5 61.7242 57.9 61.7242 46C61.7242 34.1 65.3242 28.5 74.6242 28.5C83.7242 28.5 87.3242 34.1 87.3242 46C87.3242 57.9 83.8242 63.5 74.6242 63.5ZM133.046 19.8C124.746 20.1 118.846 23.9 117.046 30V21H105.246V71H117.146V48.1C117.146 34.3 123.046 30.5 132.446 30.5C133.346 30.5 134.246 30.5 134.946 30.6L135.246 19.8H133.046ZM171.298 0.999995V27.2C167.998 22.3 162.798 19.8 156.298 19.8C142.898 19.8 133.898 30.2 133.898 46C133.898 62.3 143.398 72.2 156.498 72.2C163.098 72.2 168.398 69.4 171.298 63.9V71H183.098V0.999995H171.298ZM159.198 63.5C149.498 63.5 146.798 57.5 146.798 46C146.798 34.6 149.798 28.6 159.398 28.6C168.898 28.6 171.598 36.1 171.598 46.1C171.598 57.2 167.598 63.5 159.198 63.5ZM206.191 72.2C214.491 72.2 219.891 68.8 222.491 63.9C222.491 67 222.791 69.1 223.191 71H234.991V70.6C233.991 68.2 233.291 65.3 233.291 62V36.3C233.291 25.4 225.991 19.8 213.191 19.8C206.191 19.8 200.691 21.1 196.891 23.7C193.091 26.3 190.991 30.5 190.691 36.4L202.291 37.9C202.391 31.1 205.591 28.6 212.391 28.6C216.591 28.6 219.091 29.5 220.391 31.3C221.791 33.3 221.891 35.6 221.891 38.9L206.991 41.7C197.891 43.4 188.891 46.4 188.891 57.2C188.891 67.3 196.991 72.2 206.191 72.2ZM208.791 63.3C204.491 63.3 201.091 61.3 201.091 57.1C201.091 52.6 204.191 51 208.891 50L221.891 47.2V51.8C221.891 59.1 217.191 63.3 208.791 63.3ZM281.607 24.9C278.207 21.4 274.107 19.8 267.607 19.8C260.407 19.8 255.007 22.5 252.507 28.6V21H240.707V71H252.607V43.6C252.607 31.5 259.107 29.1 263.507 29.1C266.407 29.1 268.807 29.3 271.007 31.5C273.607 33.9 273.807 37.1 273.807 41.7V71H285.807V40.8C285.807 34.8 285.507 28.9 281.607 24.9ZM355.539 35.1C361.239 32.3 364.939 27.2 364.939 20C364.939 3 350.539 0.999995 337.539 0.999995H312.039V71H338.639C353.339 71 367.639 69.1 367.639 51.6C367.639 43 363.239 37.9 355.539 35.1ZM324.539 11.1H336.839C345.139 11.1 352.739 11.4 352.739 20.7C352.739 30.1 345.139 30.3 336.739 30.3H324.539V11.1ZM338.239 61H324.539V40.3H338.739C346.339 40.3 355.439 40.5 355.439 51C355.439 60.7 347.939 61 338.239 61ZM373.238 13.2H385.138V0.399997H373.238V13.2ZM373.238 71H385.138V21H373.238V71ZM420.964 19.8C412.664 20.1 406.764 23.9 404.964 30V21H393.164V71H405.064V48.1C405.064 34.3 410.964 30.5 420.364 30.5C421.264 30.5 422.164 30.5 422.864 30.6L423.164 19.8H420.964ZM457.98 71H471.58L451.38 39.6L470.98 21H455.68L437.88 39.2V0.999995H425.98V71H437.88V52.3L443.38 47.2L457.98 71ZM514.641 25.1C511.141 21.3 506.841 19.8 500.341 19.8C493.641 19.8 488.141 22.6 485.441 28.4V0.999995H473.641V71H485.541V43.2C485.541 31.3 492.141 29.1 496.441 29.1C499.341 29.1 501.741 29.3 504.041 31.6C506.541 34 506.741 36.8 506.741 41.4V71H518.741V40.8C518.741 34.6 518.441 29.2 514.641 25.1ZM567.179 28.1C562.979 22.8 556.279 19.8 548.379 19.8C540.779 19.8 534.779 22.2 530.379 26.8C525.879 31.6 523.679 38.2 523.679 45.9C523.679 54 525.779 60.6 530.379 65.3C534.679 69.7 540.679 72.2 548.479 72.2C561.279 72.2 569.479 66.4 572.079 55L560.579 54.1C559.479 60.2 555.679 63.3 548.379 63.3C540.079 63.3 535.879 58.6 535.679 49.3H572.879C573.179 40.7 571.179 33.1 567.179 28.1ZM548.379 28.7C552.779 28.7 555.779 29.9 557.979 32.6C559.679 34.7 560.579 37.6 560.779 40.4H535.779C535.979 38 536.679 35.3 538.279 33.1C540.279 30.3 543.679 28.7 548.379 28.7ZM593.043 72.2C601.343 72.2 606.743 68.8 609.343 63.9C609.343 67 609.643 69.1 610.043 71H621.843V70.6C620.843 68.2 620.143 65.3 620.143 62V36.3C620.143 25.4 612.843 19.8 600.043 19.8C593.043 19.8 587.543 21.1 583.743 23.7C579.943 26.3 577.843 30.5 577.543 36.4L589.143 37.9C589.243 31.1 592.443 28.6 599.243 28.6C603.443 28.6 605.943 29.5 607.243 31.3C608.643 33.3 608.743 35.6 608.743 38.9L593.843 41.7C584.743 43.4 575.743 46.4 575.743 57.2C575.743 67.3 583.843 72.2 593.043 72.2ZM595.643 63.3C591.343 63.3 587.943 61.3 587.943 57.1C587.943 52.6 591.043 51 595.743 50L608.743 47.2V51.8C608.743 59.1 604.043 63.3 595.643 63.3ZM662.259 0.999995V27.2C658.959 22.3 653.759 19.8 647.259 19.8C633.859 19.8 624.859 30.2 624.859 46C624.859 62.3 634.359 72.2 647.459 72.2C654.059 72.2 659.359 69.4 662.259 63.9V71H674.059V0.999995H662.259ZM650.159 63.5C640.459 63.5 637.759 57.5 637.759 46C637.759 34.6 640.759 28.6 650.359 28.6C659.859 28.6 662.559 36.1 662.559 46.1C662.559 57.2 658.559 63.5 650.159 63.5Z"
          fill={color}
        />
      )
    case 'mail':
      return (
        <>
          <rect width="256" height="256" fill="none"></rect>
          <polygon
            points="224 96 145.5 152 110.5 152 32 96 128 32 224 96"
            opacity="0.2"
          ></polygon>
          <path
            d="M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></path>
          <line
            x1="110.5"
            y1="152"
            x2="34.5"
            y2="205.7"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></line>
          <line
            x1="221.5"
            y1="205.7"
            x2="145.5"
            y2="152"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></line>
          <polyline
            points="224 96 145.5 152 110.5 152 32 96"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></polyline>
        </>
      )
    case 'linkedin':
      return (
        <svg>
          <rect width="256" height="256" fill="none"></rect>
          <rect
            x="36"
            y="36"
            width="184"
            height="184"
            rx="8"
            opacity="0.2"
          ></rect>
          <rect
            x="36"
            y="36"
            width="184"
            height="184"
            rx="8"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></rect>
          <line
            x1="120"
            y1="112"
            x2="120"
            y2="176"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></line>
          <line
            x1="88"
            y1="112"
            x2="88"
            y2="176"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></line>
          <path
            d="M120,140a28,28,0,0,1,56,0v36"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></path>
          <circle cx="88" cy="80" r="12"></circle>
        </svg>
      )
    case 'Facebook':
      return (
        <path
          d="M43.52,80V53.164H34.531V42.5H43.52V34.1C43.52,24.969,49.1,20,57.242,20a75.461,75.461,0,0,1,8.227.422v9.539H59.82c-4.43,0-5.285,2.109-5.285,5.191V42.5h10L63.16,53.164H54.535V80"
          fill={color}
        />
      )
    case 'Instagram':
      return (
        <svg>
          <path
            d="M172,36H84A48,48,0,0,0,36,84v88a48,48,0,0,0,48,48h88a48,48,0,0,0,48-48V84A48,48,0,0,0,172,36ZM128,168a40,40,0,1,1,40-40A40,40,0,0,1,128,168Z"
            opacity="1"
          ></path>
          <circle
            cx="128"
            cy="128"
            r="40"
            fill="none"
            stroke="#000000"
            opacity="0.8"
            strokeMiterlimit="10"
            strokeWidth="16"
          ></circle>
          <rect
            x="36"
            y="36"
            width="184"
            height="184"
            rx="48"
            fill="none"
            stroke="#000000"
            opacity="0.8"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          ></rect>
          <circle fill="#fff" cx="180" cy="76" r="12"></circle>
        </svg>
      )
    case 'Twitter':
      return (
        <svg>
          <rect width="256" height="256" fill="none"></rect>
          <path
            d="M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z"
            opacity="1"
          ></path>
          <path
            d="M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z"
            fill="none"
            stroke="#000000"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
            opacity="0.8"
          ></path>
        </svg>
      )
    case 'Discord':
      return (
        <svg>
          <path
            d="M101,182.1l-12.1,24a7.8,7.8,0,0,1-9,4.2c-24.5-6-45.7-16.4-61.1-29.8a8.1,8.1,0,0,1-2.4-8.4L50.3,58.9A7.7,7.7,0,0,1,55,53.8a176.4,176.4,0,0,1,29.6-9.2A8.1,8.1,0,0,1,94,49.9l7.9,23.9h0a190.1,190.1,0,0,1,52.2,0h0L162,49.9a8.1,8.1,0,0,1,9.4-5.3A176.4,176.4,0,0,1,201,53.8a7.7,7.7,0,0,1,4.7,5.1l33.9,113.2a8.1,8.1,0,0,1-2.4,8.4c-15.4,13.4-36.6,23.8-61.1,29.8a7.8,7.8,0,0,1-9-4.2l-12.1-24a195,195,0,0,1-27,1.9,195,195,0,0,1-27-1.9Z"
            opacity="1"
          ></path>
          <circle fill="#fff" cx="96" cy="144" r="12"></circle>
          <circle fill="#fff" cx="160" cy="144" r="12"></circle>
          <path
            d="M74.4,80A174.9,174.9,0,0,1,128,72a174.9,174.9,0,0,1,53.6,8"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
            opacity="0.8"
          ></path>
          <path
            d="M181.6,176a174.9,174.9,0,0,1-53.6,8,174.9,174.9,0,0,1-53.6-8"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
            opacity="0.8"
          ></path>
          <path
            d="M155,182.1l12.1,24a7.8,7.8,0,0,0,9,4.2c24.5-6,45.7-16.4,61.1-29.8a8.1,8.1,0,0,0,2.4-8.4L205.7,58.9a7.7,7.7,0,0,0-4.7-5.1,176.4,176.4,0,0,0-29.6-9.2,8.1,8.1,0,0,0-9.4,5.3l-7.9,23.9"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
            opacity="0.8"
          ></path>
          <path
            d="M101,182.1l-12.1,24a7.8,7.8,0,0,1-9,4.2c-24.5-6-45.7-16.4-61.1-29.8a8.1,8.1,0,0,1-2.4-8.4L50.3,58.9A7.7,7.7,0,0,1,55,53.8a176.4,176.4,0,0,1,29.6-9.2A8.1,8.1,0,0,1,94,49.9l7.9,23.9"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
            opacity="0.8"
          ></path>
        </svg>
      )
    case 'YouTube':
      return (
        <path
          d="M76.351,36.715a6.911,6.911,0,0,0-4.863-4.894C67.2,30.664,50,30.664,50,30.664s-17.2,0-21.488,1.157a6.911,6.911,0,0,0-4.863,4.894C22.5,41.032,22.5,50.039,22.5,50.039s0,9.007,1.149,13.324a6.808,6.808,0,0,0,4.863,4.816C32.8,69.336,50,69.336,50,69.336s17.2,0,21.488-1.157a6.808,6.808,0,0,0,4.863-4.816C77.5,59.046,77.5,50.039,77.5,50.039S77.5,41.032,76.351,36.715Zm-31.976,21.5V41.861L58.75,50.039,44.375,58.217h0Z"
          fill={color}
        />
      )
    case 'Github':
      return (
        <path
          d="M50,20.056a30.705,30.705,0,0,0-9.7,59.835c1.535.282,2.1-.666,2.1-1.48,0-.728-.027-2.659-.042-5.221-8.54,1.855-10.342-4.116-10.342-4.116-1.4-3.547-3.409-4.491-3.409-4.491-2.787-1.905.211-1.866.211-1.866,3.081.217,4.7,3.164,4.7,3.164,2.739,4.691,7.186,3.337,8.935,2.551A6.564,6.564,0,0,1,44.4,64.327c-6.817-.775-13.985-3.409-13.985-15.174a11.866,11.866,0,0,1,3.161-8.238,11.039,11.039,0,0,1,.3-8.126s2.577-.825,8.442,3.148a29.087,29.087,0,0,1,15.373,0c5.862-3.973,8.435-3.148,8.435-3.148a11.027,11.027,0,0,1,.3,8.126,11.844,11.844,0,0,1,3.156,8.238c0,11.8-7.178,14.39-14.018,15.15,1.1.948,2.084,2.822,2.084,5.686,0,4.1-.037,7.416-.037,8.422,0,.821.553,1.777,2.111,1.477A30.707,30.707,0,0,0,50,20.056Z"
          fill={color}
        />
      )
    case 'Arrow':
      return (
        <polygon
          points="51.829 7.172 46.172 12.828 79.343 46 4 46 4 54 79.343 54 46.172 87.172 51.829 92.828 94.658 50 51.829 7.172"
          fill={color}
        />
      )
    case 'Plus':
      return (
        <polygon
          points="80 46 54 46 54 20 46 20 46 46 20 46 20 54 46 54 46 80 54 80 54 54 80 54 80 46"
          fill={color}
        />
      )
    case 'Minus':
      return <rect x="20" y="46" width="60" height="8" fill={color} />
    case 'Checkmark':
      return (
        <path
          fill="none"
          stroke={color}
          strokeWidth="13"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeMiterlimit="10"
          d="M12.1 52.1l24.4 24.4 53-53"
        />
      )
    case 'Chevron Down':
      return (
        <polygon
          points="51.5 85.657 8.672 42.828 14.328 37.172 51.5 74.343 88.672 37.172 94.328 42.828 51.5 85.657"
          fill={color}
        />
      )
    case 'Hamburger':
      return (
        <>
          <rect width="23" height="2.5" rx="1.5" fill={color} />
          <rect y="5" width="23" height="2.5" rx="1.5" fill={color} />
          <rect y="10" width="23" height="2.5" rx="1.5" fill={color} />
        </>
      )
    case 'Close':
      return (
        <>
          <line
            x1="1.29289"
            y1="18.2929"
            x2="18.2929"
            y2="1.29289"
            stroke={color}
            strokeWidth="2"
          />
          <line
            y1="-1"
            x2="24.0416"
            y2="-1"
            transform="matrix(-0.707107 -0.707107 -0.707107 0.707107 18 19)"
            stroke={color}
            strokeWidth="2"
          />
        </>
      )
    case 'Question':
      return (
        <path
          d="M0.778666 8.54H5.56667C5.56667 6.02 6.53867 4.544 8.73467 4.544C10.4987 4.544 11.4707 5.66 11.4707 7.244C11.4707 8.36 10.8227 9.62 10.1387 10.412C8.48267 12.392 6.10667 14.516 6.07067 17.972H10.7867C11.0387 14.696 16.4027 12.428 16.4027 7.172C16.4027 4.94 15.5747 3.14 13.9907 1.988C12.7667 1.088 11.1107 0.547999 8.95067 0.547999C2.97467 0.547999 0.778666 4.472 0.778666 8.54ZM11.1107 26V20.672H5.78267V26H11.1107Z"
          fill={color}
        />
      )
    case 'Diag Arrow':
      return (
        <path
          d="M13.7891 5.978L2.25716 17.3804H0.00279971L0.00279971 14.8658L11.6046 3.53441L0 3.53441L0 0.462891L17 0.505518C17 6.13143 17 11.7564 17 17.3804H13.7779C13.7854 13.5749 13.7891 9.77408 13.7891 5.978Z"
          fill={color}
        />
      )
    default:
      return <path />
  }
}

const Icon = (props) => {
  const { id = '', name, color, viewBox = '0 0 100 100', className } = props

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox={viewBox}
      aria-labelledby={`${name.replace(/\s/g, '').toLowerCase()}-${id}`}
      className={className || 'icon'}
    >
      <title id={`${name.replace(/\s/g, '').toLowerCase()}-${id}`}>
        {name}
      </title>
      {getIcon(name, color)}
    </svg>
  )
}

export default Icon
